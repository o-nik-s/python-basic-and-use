# Модель данных: объекты

# Объект
# Объект - абстракция для данных
# Объект - это некоторый койнтейнер для данных, который содержит объекты
# Данные - это объекты и отношения между объектами

a = 1
b = 2
c = [a, b]
# Тогда в оперативной памяти помимо объектов для данных элементов мы должны хранить отношения включения

# У любого объекта в Пайтоне есть три обязательных вещи: идентификатор, тип, значение

# Идентификатор не может измениться

# Получить идентификатор

x = [1, 2, 3]
print(id(x))
print(id([1, 2, 3])) # Не равен идентификатору x, потому как созданы в разное время
y = x
print(id(y))
# Идентификаторы x и y равны!
# Два разных объекта не могут иметь один и тот же идетификатор
print(id(5))
print(id(5))
z = 5
print(id(z))

# Оператор is:
# сравнивает объекты левой и правой части на равенство /true, false/
x = [1, 2, 3]
y = x
print(y is x)
print(y is [1, 2, 3])

# Стоит всегда держать в голове, что переменная - это всего лишь ссыдка на объект,
# и значение переменной - это всегда значение объекта, поэтому если несколько переменных
# будут ссылаться на один и тот же объект, то их значение будет совпалать

# Изменяется объект, а не переменная
x = [1, 2, 3]
y = x
x.append(4) # Добавляет элемент в конец списка
print(x)
print(y)
# y изменилась вместе с x, потому что они ссылались на один и тот же объект


print(type(id(x)))
# Идентификатор объекта не является ссылкой на объект!
# Идентификаторы всех объектов уникальны


x = [1, 2, 3]
y = x
y.append(4)

s = "123"
t = s
t = t + "4"

print(str(x) + " " + s)


# У любого объекта может быть тип
# Тип определяет то, что мы можем сделать с объектом, а так же возможные принимаемые значения объекта

# Тип объекта не может быть изменен после создания объекта (как и идентификатор)
# Узнать тип объекта можно с помощью функции type()
x = [1, 2, 3]
print(type(4))

print(type(type(x)))

# Все в Паайтон есть объекты

# У любого объекта в Пайтон есть значение
# Если значение может ихменяться - изменяемый
# Если не может изменяться - не изменяемый

# Immutable
# Числа (int, float, copmlex), логический тип bool (всего 2 объекта - True и False)
# Кортеж (tuple), строки (list) как последовательность символов
# Неизменяемые множества (frozenset)

# Mutable
# Список (list), словари (dict), множества (set)

# Значения списка - это упорядоченное множество ссылок на объекты
# Изменяемость ссылок и его большое отличие от кортежа в том, что мы можем изменить последовательность ссылок
# Кортеж же является не изменяемой последовательностью, и, будучи один раз созданным, мы не можем его изменить до конца жизни объекта

# Строки так же неизменяемы. Однако теперь храним не ссылки на объекты, а просто символы в Юникоде.
# Стандартной кодировкой в Пайтон является utf-8.

# Словари - изменяемый тип данных
# Множество - изменяемый тип данных
# Однако у множества есть и не изменяемая версия: frozenset

# В случае нескольких переменных, ссылающихся на один объект изменяемого типа, изменение любой из них к изменению объекта,
# и, как следствие, изменению всех переменных, которые на него ссылаются.

# При переприсваивании неизменяемой переменной используется уже существующий объект, если он уже есть.

x = []
y = []
# Оба раза будет создан новый объект
# И это верно для всех изменяемыз типов языка Пайтон

# Теперь проясним одну важную деталь языка python: чтобы узнать, лежит ли объект внутри множества (или ключей словаря)
# или нет, мы пользуемся hash и сравнением через == ﻿: https://docs.python.org/3/reference/datamodel.html#object.__hash__﻿ .